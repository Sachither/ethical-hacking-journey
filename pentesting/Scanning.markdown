# Scanning

Scanning is conducted after extensive passive reconnaissance to identify IP blocks, domains, servers, and name servers. It aims to gather detailed information about the targetâ€™s network and systems.

## Objectives
- Host discovery.
- Operating system and service detection.
- UDP scanning.
- Stealth scans.
- Firewall evasion.

## Types of Scanning
- **Network Scanning**: Identifies active hosts on a target network to create a detailed schematic of the network infrastructure.
- **Port Scanning**: Probes the target with specific TCP flags to enumerate running services, their ports, and responses to determine the operating system, service versions, and presence of packet filtering or firewalls.

## TCP Flags
TCP flags, found in the TCP header, control the transmission and flow of packets across a network.

| **Flag** | **Description** |
|----------|-----------------|
| **URG (Urgent)** | Indicates that the packet should be processed immediately. |
| **PSH (Push)** | Transmits data immediately to the application. |
| **FIN (Finish)** | Signals no further data transmission from the sender. |
| **ACK (Acknowledgment)** | Acknowledges receipt of a packet. |
| **SYN (Synchronization)** | Initializes a connection between the host and target. |
| **RST (Reset)** | Resets the connection, often due to an error or rejection. |

## TCP vs. UDP
- **TCP**: Connection-based communication requiring a connection to be established before sending packets (e.g., via the TCP 3-way handshake).
- **UDP**: Connectionless communication where packets are sent without establishing a connection, often used for faster but less reliable data transfer.

## TCP 3-Way Handshake
The TCP 3-way handshake establishes a reliable connection between a client and a server.

1. **SYN**: The client sends a SYN packet to the server to initiate a connection.
2. **SYN-ACK**: The server responds with a SYN-ACK packet, acknowledging the request and sending its own synchronization request.
3. **ACK**: The client sends an ACK packet to confirm the connection.

**Diagram**:
```plaintext
Client                  Server
  |    ---- SYN ---->    |
  |    <--- SYN-ACK ---  |
  |    ---- ACK ---->    |
(Connection Established)
```